[build-system]
requires = ["hatchling>=1.25.0"]
build-backend = "hatchling.build"

[project]
# Metadados principais (PEP 621)
name = "ftc4"
version = "0.1.0"
description = "API + Modelo LSTM"
readme = "README.md"
requires-python = ">=3.10,<=3.10.19"
license = { text = "MIT" }
authors = [{ name = "AntonioJCS", email = "antonioxp.8@hotmail.com" }]
keywords = ["machine-learning"]

#  Dependências principais (instaladas sempre)
dependencies = [
    "requests>=2.25.1",
    "numpy>=1.21.0",
    "python-dotenv (>=1.1.0,<2.0.0)",
    "fastapi (>=0.115.12,<0.116.0)",
    "uvicorn (>=0.34.3,<0.35.0)",
    "sqlalchemy (>=2.0.41,<3.0.0)",
    "passlib (>=1.7.4,<2.0.0)",
    "python-jose (>=3.5.0,<4.0.0)",
    "yfinance (>=0.2.62,<0.3.0)",
    "scikit-learn (>=1.7.0,<2.0.0)",
    "matplotlib (>=3.10.3,<4.0.0)",
    "torch (>=2.7.1,<3.0.0)",
    "rich>=14.2.0",
]

# Entrypoints CLI (PEP 621)
[project.scripts]
# Startar Aplicação
start = "ftc4.run:main_public"
start_admin = "ftc4.run:main_admin"

[tool.hatch.build.targets.wheel]
# pacotes editaveis
packages = ["src/ftc4"]

# Dependências de desenvolvimento
[dependency-groups]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-mermaid2-plugin",      # diagramas
    "mkdocstrings[python]",        # documentação automática de código
    "mkdocs-awesome-pages-plugin", # estrutura hierárquica nos docs
]

lint = [
    "ruff",
    "black",
    "isort",
    "mypy",       # type checking estático
    "bandit",     # segurança e análise de vulnerabilidade
    "pre-commit",
]

tests = [
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "coverage",
    "hypothesis",  # testes baseados em propriedades
]

dev = [
    "ipython",
    "jupyterlab",
    "notebook",
    "rich", # logging e visualização bonita no terminal
    "tqdm", # barras de progresso
    "debugpy", # debugging com VSCode
    "types-requests", # tipagem estática opcional
    "ipykernel>=6.30.1",
]
